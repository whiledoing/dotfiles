# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# for zsh-completions
fpath=(/usr/local/share/zsh-completions $fpath)

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
# ZSH_THEME="robbyrussell"
# ZSH_THEME="amuse"
# ZSH_THEME="agnoster"
# ZSH_THEME="powerline-modified"
ZSH_THEME="ys"
# ZSH_THEME="apple"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git autojump copyfile copydir 
python pip svn command-not-found osx web-search zsh-syntax-highlighting 
sublime brew)

source $ZSH/oh-my-zsh.sh

# User configuration

export PATH=$HOME/bin:/usr/local/bin:$PATH
# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
    # export EDITOR='vim'
# else
    # export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# my part
alias cls='clear'
alias ls='ls -h'
alias ll='ls -lh'
alias la='ls -Alh'
alias lt='ls -Alhtr'
alias javac="javac -J-Dfile.encoding=utf8"
alias grep="grep --color=auto"
alias -s html=mate   # 在命令行直接输入后缀为 html 的文件名，会在 TextMate 中打开
alias -s rb=mate     # 在命令行直接输入 ruby 文件，会在 TextMate 中打开
alias -s py=vi       # 在命令行直接输入 python 文件，会用 vim 中打开，以下类似
alias -s js=vi
alias -s c=vi
alias -s java=vi
alias -s txt=vi
alias -s gz='tar -xzvf'
alias -s tgz='tar -xzvf'
alias -s zip='unzip'
alias -s bz2='tar -xjvf'

# svn alias
alias ss='svn st'
alias ssq='svn st -q'
alias ssm='svn st | grep M'
alias slast='svn log -l 1'
alias sci='svn ci -m '

# env
export VIM_APP_DIR=~/program/macvim

# alis for ssh
alias h9='ssh -p 32200 h9@10.246.13.162'

# alias for h9

# alias for zsh
alias zshconf='vim ~/.zshrc'

alias tailf='tail -f'

alias ip='ifconfig | grep inet'

alias sshvip='ssh -p 32200 hzjiangjinzheng@vip'

# some segments e.g. cwd and cvs_branch needs to find the current working
# directory of the active pane. To achieve this we let tmux save the path each
# time the shell prompt is displayed. Put the line below in your ~/.bashrc or
# where you define you PS1 variable. zsh users can put it in e.g. ~/.zshrc and
# may change PS1 to PROMPT (but that's not necessary).
# [refs](https://github.com/erikw/tmux-powerline)
PS1="$PS1"'$([ -n "$TMUX" ] && tmux setenv TMUXPWD_$(tmux display -p "#D" | tr -d %) "$PWD")'

# DEFAULT_USER="whiledoing"

# POWERLINE_HIDE_HOST_NAME="true"
# POWERLINE_HIDE_USER_NAME="true"
# POWERLINE_DETECT_SSH="true"

# funny things : [digit matrix](http://www.commandlinefu.com/commands/view/2531/matrix-style)
alias matrix='LC_ALL=C tr -c "[:digit:]" " " < /dev/urandom | dd cbs=$COLUMNS conv=unblock | GREP_COLOR="1;32" grep --color "[^ ]"'

alias 'ps?'='ps aux | grep '

# run specifc times of command : [refs](http://serverfault.com/questions/273238/how-to-run-a-command-multiple-times) 
run() {
    number=$1
    shift

    for i in `seq $number`; do
        $@
    done
}

# get rid of command not found ##
alias cd..='cd ..'

## a quick way to get out of current directory ##
alias ..='cd ..'
alias ...='cd ../../../'
alias ....='cd ../../../../'
alias .....='cd ../../../../'
alias ..2="cd ../.."
alias ..3="cd ../../.."
alias ..4="cd ../../../.."
alias ..5="cd ../../../../.."

# with math suport
alias bc='bc -l'

# make parent directory
alias mkdir='mkdir -pv'

# show path in seperator lines
alias path='echo -e ${PATH//:/\\n}'

# for time
alias now='date +"%T"'
alias nowdate='date +"%Y-%d-%m"'

# for vim
alias vi='vim'
alias svi='sudo vi'
alias edit='vim'

# stop after sending count ECHO_REQUEST packets #
alias ping='ping -c 5'

# show file without comment
alias nocomment='grep -Ev '\''^(#|$)'\'''

# editor zshrc then reload it
alias zshrc='vim ~/.zshrc && echo "source zshrc ing........." && source ~/.zshrc && echo "source finish"'

# cd and ls it immediately
# [refs](http://www.cyberciti.biz/tips/bash-aliases-mac-centos-linux-unix.html)
cdl() {
    cd "$@";
    ls -al;
}

# dirs show dir in one line with number
alias dirs='dirs -p'

alias inmongo='mongo -u h9admin -p h9mongopw 127.0.0.1:30000/admin'

# using vim biding in conf
# [set vi mode]()
# [set vi key binding in zsh](http://stackoverflow.com/questions/6839006/map-jj-to-esc-in-inputrc-readline)
# bindkey -v
set bell-style none

# using jj as esc 
# bindkey -M viins 'jj' vi-cmd-mode

# using ctrl-r in vi mode
# bindkey '^R' history-incremental-search-backward

# bindkey 'gg' beginning-of-history
# bindkey 'G' end-of-history

# bindkey '\C-w' backward-kill-word
# bindkey '\C-p' history-search-backward
# bindkey '\C-n' history-search-forward

# bindkey -M vicmd '|' beginning-of-line

# change iterm2 title
function title {
    echo -ne "\033]0;"$*"\007"
}
